<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pzj.trade.order.read.OrderForResellerReadMapper">

	<sql id="column_list">
		order_id,
		transaction_id,
		p_order_id,
		payer_id,
		operator_id,
		supplier_id,
		reseller_id,
		travel,
		travel_depart_id,
		guide_id,
		need_confirm as confirm,
		order_status,
		total_amount,
		refund_amount,
		is_direct,
		total_num,
		checked_num,
		refund_num,
		sale_port,
		contactee,
		contact_mobile,
		idcard_no,
		create_time,
		pay_time,
		third_code,
		third_pay_type,
		pay_way,
		confirm_time,
		settlement_price,
		need_confirm,
		agent_flag,
		is_dock,
		version,
		pay_state
	</sql>


	<sql id="whereForQuerySaaSResellerOrder">
		o.order_id in (
		select
		distinct
		o.order_id
		from
		t_order as o
		<if test="param.haveMerchFilter == true">
			left join
			t_order_merch as m
			on
			m.order_id = o.transaction_id
		</if>
	
		<if test="param.reseller_ids != null  and param.reseller_ids.size()>0">
            LEFT JOIN
			t_order AS o3
			ON o.p_order_id= o3.order_id
		</if>
		<where>
		  o.reseller_id!=o.supplier_id
		   <if test="param.haveParentOrderFilter==true">
				and o.pay_state=1
				 and o.order_id!=o.transaction_id
		   </if>
		   <if test="param.isRootResellerOrder==1">
		        and  o.order_id=o.transaction_id
		  </if>
	
			<if test="param.supplier_id &gt; 0">
				and o.supplier_id = #{param.supplier_id}
			</if>
			<if test="param.supplier_ids != null  and param.supplier_ids.size()>0">
				and o.supplier_id in
				<foreach collection="param.supplier_ids" item="supplier_id"
					separator="," open="(" close=")">
					#{supplier_id}
				</foreach>
			</if>
			
			<if test="param.pay_state !=null">
				and o.pay_state = #{param.pay_state}
			</if>
			
			<if test="param.p_supplier_id &gt; 0">
				and m.supplier_id = #{param.p_supplier_id}
			</if>
			<if test="param.p_supplier_ids != null  and param.p_supplier_ids.size()>0">
				and m.supplier_id in
				<foreach collection="param.p_supplier_ids" item="p_supplier_id"
					separator="," open="(" close=")">
					#{p_supplier_id}
				</foreach>
			</if>
			<if test="param.pay_way !=null">
				and o.pay_way = #{param.pay_way}
				and order_status in (10,30,40)
			</if>
			<if test="param.pay_ways != null  and param.pay_ways.size()>0">
				and o.pay_way in
				<foreach collection="param.pay_ways" item="pay_way"
					separator="," open="(" close=")">
					#{pay_way}
				</foreach>
				and order_status in (10,30,40)
		    </if>
			
			<if
				test="param.order_status_list != null  and param.order_status_list.size()>0">
				and o.order_status in
				<foreach collection="param.order_status_list" item="order_status"
					separator="," open="(" close=")">
					#{order_status}
				</foreach>
			</if>
			<if test="param.sale_port_list != null  and param.sale_port_list.size()>0">
				and o.sale_port in
				<foreach collection="param.sale_port_list" item="sale_port"
					separator="," open="(" close=")">
					#{sale_port}
				</foreach>
			</if>

			<if test="param.order_id !=null">
				and o.order_id=#{param.order_id}
			</if>
			<if test="param.transaction_id !=null">
				and o.transaction_id=#{param.transaction_id}
			</if>
	
			<if test="param.reseller_id &gt; 0">
				and o.reseller_id = #{param.reseller_id}
			</if>
			<if test="param.reseller_ids != null  and param.reseller_ids.size()>0">
				and o3.reseller_id in
				<foreach collection="param.reseller_ids" item="reseller_id"
					separator="," open="(" close=")">
					#{reseller_id}
				</foreach>
			</if>

			<if test="param.order_status &gt; 0">
				and o.order_status = #{param.order_status}
			</if>
			<if test="param.operator_id &gt; 0">
				and o.operator_id = #{param.operator_id}
			</if>
			<if test="param.contactee !=null">
				and o.contactee like CONCAT('%',#{param.contactee},'%')
			</if>
			<if test="param.contact_mobile !=null">
				and o.contact_mobile = #{param.contact_mobile}
			</if>

			<if test="param.start_date != null">
					<![CDATA[ and o.create_time >= date_format(#{param.start_date},'%Y-%m-%d 00:00:00')]]>
			</if>
			<if test="param.end_date != null">
					<![CDATA[ and o.create_time <= date_format(#{param.end_date},'%Y-%m-%d 23:59:59')]]>
			</if>

			<if test="param.merchTypes != null  and param.merchTypes.size()>0">
				and m.merch_type in
				<foreach collection="param.merchTypes" item="merchType"
					separator="," open="(" close=")">
					#{merchType}
				</foreach>
			</if>
			<if test="param.merch_type &gt; 0">
				and m.merch_type=#{param.merch_type}
			</if>
			<if test="param.confirm_date_start != null">
					<![CDATA[ and m.check_time >= date_format(#{param.confirm_date_start},'%Y-%m-%d 00:00:00')]]>
			</if>
			<if test="param.confirm_date_end != null">
					<![CDATA[ and m.check_time <= date_format(#{param.confirm_date_end},'%Y-%m-%d 23:59:59')]]>
			</if>
		
			<if test="param.product_varie !=null">
				and m.product_varie = #{param.product_varie}
			</if>
			<if test="param.sale_port &gt; 0">
				and o.sale_port = #{param.sale_port}
			</if>
			<if test="param.need_confirm &gt; 0">
				and o.need_confirm = #{param.need_confirm}
			</if>
			<!-- 待确认查询去除全部在退款的订单 -->
			<if test="param.need_confirm == 2">
				<![CDATA[ and m.total_num <> m.check_num + m.refund_num ]]>
			</if>
			
			<!-- 如果查询商品状态不是已退款 -->
			<if test="param.merch_state !=null and param.merch_state !=3">
				and m.merch_state=#{param.merch_state}
			   and 	m.is_refunding=0
			</if>
           
           <if test="param.merch_states != null  and param.merch_states.size()>0">
				and m.merch_state in
				<foreach collection="param.merch_states" item="merch_state"
					separator="," open="(" close=")">
					#{merch_state}
				</foreach>
			</if>
	
			<!-- 如果查询商品状态是已退款：退款数量大于0且没有处于退款中 -->
			<if test="param.merch_state !=null and param.merch_state ==3">
				and m.is_refunding=0 and m.refund_num>0
			</if>
			<if test="param.is_refunding !=null">
				and m.is_refunding=#{param.is_refunding}
			</if>
			
			<if test="param.product_id &gt; 0">
				and m.product_id=#{param.product_id}
			</if>
			<if test="param.product_ids != null  and param.product_ids.size()>0">
				and m.product_id in
				<foreach collection="param.product_ids" item="product_id"
					separator="," open="(" close=")">
					#{product_id}
				</foreach>
			</if>
			
			<if test="param.clear_type &gt; 0">
				and m.clear_type=#{param.clear_type}
			</if>

			<if test="param.merch_name !=null">
				and m.merch_name like CONCAT('%',#{param.merch_name},'%')
			</if>
			<!-- 游玩开始时间，游玩结束时间 -->
			<if test="param.visit_start_time !=null">
				<![CDATA[ and m.start_time >=#{param.visit_start_time,jdbcType=TIMESTAMP} ]]>
				<![CDATA[ and m.start_time <=#{param.visit_end_time,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="param.visit_end_time !=null">
				<![CDATA[ and m.expire_time <=#{param.visit_end_time,jdbcType=TIMESTAMP} ]]>
				<![CDATA[ and m.expire_time >=#{param.visit_start_time,jdbcType=TIMESTAMP} ]]>
			</if>
		</where>
		)
	</sql>




	<!-- 通用查询订单数量.新增商品总数量及订单总金额 -->
	<select id="getOrderCountByCondition" resultType="com.pzj.trade.order.entity.OrderCountEntity">
		select
		count(order_id) order_num,
		sum(total_num) merch_num,
		sum(total_amount) amount
		from t_order o
		 <where>
		 <include refid="whereForQuerySaaSResellerOrder" /> 
		 </where>
	</select>
	<!-- 通用查询订单列表 -->
	<select id="getOrderByCondition" resultType="com.pzj.trade.merch.entity.MerchListEntity">
		select
		a.order_id,
		a.p_order_id,
		a.order_status,
		a.transaction_id,
		a.checked_num,
		a.create_time,
		a.pay_time,
		a.confirm_time,
		a.total_amount,
		a.contactee,
		a.contact_mobile,
		a.sale_port,
		a.payer_id,
		a.pay_way,
		a.operator_id,
		a.supplier_id,
		a.checked_num,
		a.idcard_no,
		a.reseller_id,
		a.travel,
		a.travel_depart_id,
		a.guide_id,
		a.is_direct,
		a.agent_flag,
		a.total_num,
		a.need_confirm,
		a.refund_num as
		order_refund_num,
		a.refund_amount as order_refund_amount,
		a.settlement_price as order_settlement_price,
		a.is_dock,
		a.version,
		t.merch_id,
		t.merch_name,
		t.merch_state,
		t.product_id,
		t.channel_id,
		t.strategy_id,
		t.voucher_id,
		t.total_num as
		merch_total_num,
		t.price,
		t.merch_type,
		t.check_num,
		t.product_varie,
		t.settlement_price,
		t.refund_num,
		t.vour_type,
		t.merch_type,
		t.is_refunding,
		t.check_time,
		t.is_cleaned,
		t.start_time,
		t.expire_time,
		t.root_merch_id
		from
		t_order a
		join (
		select
		o.order_id
		from
		t_order as o
		<if test="param.haveMerchFilter == true">
			left join
			t_order_merch as m
			on
			m.order_id = o.transaction_id
		</if>
	
		<if test="param.reseller_ids != null  and param.reseller_ids.size()>0">
            LEFT JOIN
			t_order AS o3
			ON o.p_order_id = o3.order_id
		</if>	 
		<where>
		    o.reseller_id!=o.supplier_id
			<if test="param.haveParentOrderFilter==true">
			     and o.pay_state=1
				 and o.order_id!=o.transaction_id
		    </if>
		
			<if test="param.isRootResellerOrder==1">
			 	 and  o.order_id=o.transaction_id
			</if>
		    <if test="param.pay_state !=null">
				and o.pay_state = #{param.pay_state}
			</if>
	
			<if test="param.supplier_id &gt; 0">
				and o.supplier_id = #{param.supplier_id}
			</if>
			<if test="param.supplier_ids != null  and param.supplier_ids.size()>0">
				and o.supplier_id in
				<foreach collection="param.supplier_ids" item="supplier_id"
					separator="," open="(" close=")">
					#{supplier_id}
				</foreach>
			</if>
			
				<if test="param.p_supplier_id &gt; 0">
				and m.supplier_id = #{param.p_supplier_id}
			</if>
			<if test="param.p_supplier_ids != null  and param.p_supplier_ids.size()>0">
				and m.supplier_id in
				<foreach collection="param.p_supplier_ids" item="p_supplier_id"
					separator="," open="(" close=")">
					#{p_supplier_id}
				</foreach>
			</if>
			<if test="param.pay_way !=null">
				and o.pay_way = #{param.pay_way}
				and order_status in (10,30,40)
			</if>
			<if test="param.pay_ways != null  and param.pay_ways.size()>0">
				and o.pay_way in
				<foreach collection="param.pay_ways" item="pay_way"
					separator="," open="(" close=")">
					#{pay_way}
				</foreach>
				and order_status in (10,30,40)
		    </if>
			<if
				test="param.order_status_list != null  and param.order_status_list.size()>0">
				and o.order_status in
				<foreach collection="param.order_status_list" item="order_status"
					separator="," open="(" close=")">
					#{order_status}
				</foreach>
			</if>
			<if test="param.sale_port_list != null  and param.sale_port_list.size()>0">
				and o.sale_port in
				<foreach collection="param.sale_port_list" item="sale_port"
					separator="," open="(" close=")">
					#{sale_port}
				</foreach>
			</if>

			<if test="param.order_id !=null">
				and o.order_id=#{param.order_id}
			</if>
			<if test="param.transaction_id !=null">
				and o.transaction_id=#{param.transaction_id}
			</if>
	
			<if test="param.reseller_id &gt; 0">
				and o.reseller_id = #{param.reseller_id}
			</if>
			<if test="param.reseller_ids != null  and param.reseller_ids.size()>0">
				and o3.reseller_id in
				<foreach collection="param.reseller_ids" item="reseller_id"
					separator="," open="(" close=")">
					#{reseller_id}
				</foreach>
			</if>

			<if test="param.order_status &gt; 0">
				and o.order_status = #{param.order_status}
			</if>
			<if test="param.operator_id &gt; 0">
				and o.operator_id = #{param.operator_id}
			</if>
			<if test="param.contactee !=null">
				and o.contactee like CONCAT('%',#{param.contactee},'%')
			</if>
			<if test="param.contact_mobile !=null">
				and o.contact_mobile = #{param.contact_mobile}
			</if>

			<if test="param.start_date != null">
					<![CDATA[ and o.create_time >= date_format(#{param.start_date},'%Y-%m-%d 00:00:00')]]>
			</if>
			<if test="param.end_date != null">
					<![CDATA[ and o.create_time <= date_format(#{param.end_date},'%Y-%m-%d 23:59:59')]]>
			</if>

			<if test="param.merchTypes != null  and param.merchTypes.size()>0">
				and m.merch_type in
				<foreach collection="param.merchTypes" item="merchType"
					separator="," open="(" close=")">
					#{merchType}
				</foreach>
			</if>
			<if test="param.merch_type &gt; 0">
				and m.merch_type=#{param.merch_type}
			</if>
			<if test="param.confirm_date_start != null">
					<![CDATA[ and m.check_time >= date_format(#{param.confirm_date_start},'%Y-%m-%d 00:00:00')]]>
			</if>
			<if test="param.confirm_date_end != null">
					<![CDATA[ and m.check_time <= date_format(#{param.confirm_date_end},'%Y-%m-%d 23:59:59')]]>
			</if>
		
			<if test="param.product_varie !=null">
				and m.product_varie = #{param.product_varie}
			</if>
			<if test="param.sale_port &gt; 0">
				and o.sale_port = #{param.sale_port}
			</if>
			<if test="param.need_confirm &gt; 0">
				and o.need_confirm = #{param.need_confirm}
			</if>
			<!-- 待确认查询去除全部在退款的订单 -->
			<if test="param.need_confirm == 2">
				<![CDATA[ and m.total_num <> m.check_num + m.refund_num ]]>
			</if>
			
			<!-- 如果查询商品状态不是已退款 -->
			<if test="param.merch_state !=null and param.merch_state !=3">
				and m.merch_state=#{param.merch_state}
			   and 	m.is_refunding=0
			</if>
           
           <if test="param.merch_states != null  and param.merch_states.size()>0">
				and m.merch_state in
				<foreach collection="param.merch_states" item="merch_state"
					separator="," open="(" close=")">
					#{merch_state}
				</foreach>
			</if>
	
			<!-- 如果查询商品状态是已退款：退款数量大于0且没有处于退款中 -->
			<if test="param.merch_state !=null and param.merch_state ==3">
				and m.is_refunding=0 and m.refund_num>0
			</if>
			<if test="param.is_refunding !=null">
				and m.is_refunding=#{param.is_refunding}
			</if>
			
			<if test="param.product_id &gt; 0">
				and m.product_id=#{param.product_id}
			</if>
			
			<if test="param.product_ids != null  and param.product_ids.size()>0">
				and m.product_id in
				<foreach collection="param.product_ids" item="product_id"
					separator="," open="(" close=")">
					#{product_id}
				</foreach>
			</if>
			<if test="param.clear_type &gt; 0">
				and m.clear_type=#{param.clear_type}
			</if>

			<if test="param.merch_name !=null">
				and m.merch_name like CONCAT('%',#{param.merch_name},'%')
			</if>
			<!-- 游玩开始时间，游玩结束时间 -->
			<if test="param.visit_start_time !=null">
				<![CDATA[ and m.start_time >=#{param.visit_start_time,jdbcType=TIMESTAMP} ]]>
				<![CDATA[ and m.start_time <=#{param.visit_end_time,jdbcType=TIMESTAMP} ]]>
			</if>
			<if test="param.visit_end_time !=null">
				<![CDATA[ and m.expire_time <=#{param.visit_end_time,jdbcType=TIMESTAMP} ]]>
				<![CDATA[ and m.expire_time >=#{param.visit_start_time,jdbcType=TIMESTAMP} ]]>
			</if>
		</where>
		group by o.order_id
		order by o.create_time
		<if test="param.sortDesc == true">
			desc
		</if>
		limit #{page_index},#{page_size}
		) b
		on
		a.order_id = b.order_id
		join
		t_order_merch t
		on t.order_id = a.transaction_id
		order by a.create_time
		<if test="param.sortDesc == true">
			desc
		</if>
		,t.product_id
	</select>
	

		<!-- 根据分销商订单ID查询对应供应商订单的订单信息. -->
	<select id="getSupplierOrdersByResellerOrderId" resultType="com.pzj.trade.order.entity.OrderEntity"
		parameterType="String">
		select
			order_id,
		    transaction_id,
		    p_order_id,
			order_status,
			create_time,
			supplier_id,
			pay_time,
			payer_id,
			pay_way,
			third_pay_type,
			total_amount,
			refund_amount,
			checked_num,
			total_num,
			refund_num
		from
		t_order
		where
		transaction_id = #{transaction_id}
       and order_level=#{order_level}
	</select>
	
			<!-- 根据分销商订单ID查询对应供应商订单的订单信息. -->
	<select id="getResellerOrdersByTransactionId" resultType="com.pzj.trade.order.entity.OrderEntity"
		parameterType="String">
		select
			order_id,
		    transaction_id,
		    p_order_id,
			order_status,
			create_time,
			supplier_id,
			pay_time,
			payer_id,
			pay_way,
			third_pay_type,
			total_amount,
			refund_amount,
			checked_num,
			total_num,
			refund_num
		from
		t_order
		where
		transaction_id = #{transaction_id}
         and  transaction_id=order_id
	</select>
	
	
	
			<!-- 根据transactionIds查询对应供应商订单的订单信息. -->
	<select id="getSupplierOrdersByTransactionIds" resultType="com.pzj.trade.order.entity.OrderEntity">
		SELECT
			order_id,
		    transaction_id,
		    p_order_id,
			order_status,
			create_time,
			supplier_id,
			pay_time,
			payer_id,
			pay_way,
			third_pay_type,
			total_amount,
			refund_amount,
			checked_num,
			total_num,
			refund_num
		FROM
	    t_order 
		<where>
			<if test="order_level &gt; 0">
				and order_level = #{order_level}
			</if>
			<if test="transaction_ids != null  and transaction_ids.size()>0">
				and transaction_id in
				<foreach collection="transaction_ids" item="transaction_id"
					separator="," open="(" close=")">
					#{transaction_id}
				</foreach>
			</if>
		</where>
	</select>
	
	


	<!-- 根据订单ID获取订单信息. -->
	<select id="queryOrderDetailByOrderId" resultType="com.pzj.trade.order.entity.OrderEntity"
		parameterType="String">
		select
		<include refid="column_list" />
		from
		t_order
		<where>
		<if test="order_id != null">
		  order_id=#{order_id}
		</if>
		<if test="reseller_id &gt; 0">
		  and reseller_id=#{reseller_id}
		</if>
		<if test="order_level &gt; 0">
		  and order_level=#{order_level}
		</if>
		<if test="transaction_id != null">
		  and transaction_id=#{transaction_id}
		</if>
		</where>
	</select>	
	
		<!-- 获取我的分销商订单信息. -->
	<select id="queryResellerOrder" resultType="com.pzj.trade.order.entity.OrderEntity"
		parameterType="String">
		select
		<include refid="column_list" />
		from
		t_order
		where
		order_id = #{p_order_id}
		and supplier_id= #{supplier_id}
	</select>	
			<!-- 批量获取我的分销商订单信息. -->
	<select id="queryResellerOrders" resultType="com.pzj.trade.order.entity.OrderEntity"
		parameterType="String">
		select
		<include refid="column_list" />
		from
		t_order
		<where>
	       <if test="p_order_ids != null  and p_order_ids.size()>0">
				order_id in 
				<foreach collection="p_order_ids" item="p_order_id"
					separator="," open="(" close=")">
					#{p_order_id}
				</foreach>
			</if>
			<if test="supplier_ids != null  and supplier_ids.size()>0">
			    and supplier_id in
				<foreach collection="supplier_ids" item="supplier_id"
					separator="," open="(" close=")">
					#{supplier_id}
				</foreach>
			</if>
		</where>
	</select>
	
	
	<select id="queryOrderAmountReseller" resultType="com.pzj.trade.order.entity.OrderCountEntity">
		select
		sum(total_amount) amount
		from t_order
		where order_id in (
		select
		distinct
		o.order_id
		from
		t_order as o
		<where>
		    o.order_id != o.transaction_id
		    <if test="reseller_id &gt; 0">
			  and reseller_id=#{reseller_id}
			</if> 
		</where>
		)
	</select>
	
	<select id="queryOrderExports" resultType="com.pzj.core.trade.export.entity.SaaSOrderExportEntity">
	select
		o.transaction_id,
		o.order_id ,
		o.order_status,
		o.create_time,
		m.start_time,
		m.expire_time,
		m.check_time,
		o.sale_port,
		o.supplier_id,
		(select reseller_id from t_order sub where sub.order_id=o.p_order_id) reseller_id,
		o.contactee,
		o.contact_mobile,
		o.idcard_no,
	
		m.product_id,
		m.merch_name,
		m.merch_type,
		m.merch_state,
		m.sku_name,
		m.product_varie,
		m.total_num,
		m.check_num,
		m.refund_num,
		m.refunding_num,
		m.supplier_id as original_supplier_id,
	
		(select price from t_order_strategy s where s.order_id=o.order_id and
		s.merch_id=m.merch_id ) purch_price,
		(select after_rebate_amount from t_order_strategy s where
		s.order_id=o.order_id and s.merch_id=m.merch_id ) purch_after_rebate,
		(select price from t_order_strategy s where s.order_id=o.p_order_id and
		s.merch_id=m.merch_id ) sale_price,
		(select after_rebate_amount from t_order_strategy s where
		s.order_id=o.p_order_id and s.merch_id=m.merch_id ) sale_after_rebate,
	
		(select attr_value from t_order_extend_attr a
		where a.attr_group='contact'
		and a.attr_key='contact_spelling'
		and a.transaction_id=o.transaction_id) contact_spelling,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='contact'
		and a.attr_key='contact_email'
		and a.transaction_id=o.transaction_id) contact_email,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='delivery'
		and a.attr_key='delivery_addr_nation'
		and a.transaction_id=o.transaction_id) delivery_addr_nation,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='delivery'
		and a.attr_key='delivery_addr_province'
		and a.transaction_id=o.transaction_id) delivery_addr_province,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='delivery'
		and a.attr_key='delivery_addr_city'
		and a.transaction_id=o.transaction_id) delivery_addr_city,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='delivery'
		and a.attr_key='delivery_addr_county'
		and a.transaction_id=o.transaction_id) delivery_addr_county,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='delivery'
		and a.attr_key='delivery_addr_detail'
		and a.transaction_id=o.transaction_id) delivery_addr_detail,
	
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_on_addr_nation'
		and a.transaction_id=o.transaction_id) get_on_addr_nation,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_on_addr_province'
		and a.transaction_id=o.transaction_id) get_on_addr_province,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_on_addr_city'
		and a.transaction_id=o.transaction_id) get_on_addr_city,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_on_addr_county'
		and a.transaction_id=o.transaction_id) get_on_addr_county,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_on_addr_detail'
		and a.transaction_id=o.transaction_id) get_on_addr_detail,
	
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_off_addr_nation'
		and a.transaction_id=o.transaction_id) get_off_addr_nation,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_off_addr_province'
		and a.transaction_id=o.transaction_id) get_off_addr_province,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_off_addr_city'
		and a.transaction_id=o.transaction_id) get_off_addr_city,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_off_addr_county'
		and a.transaction_id=o.transaction_id) get_off_addr_county,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='user_car'
		and a.attr_key='get_off_addr_detail'
		and a.transaction_id=o.transaction_id) get_off_addr_detail,
	
		(select attr_value from t_order_extend_attr a
		where a.attr_group='other'
		and a.attr_key='expect_use_car_time'
		and a.transaction_id=o.transaction_id) expect_use_car_time,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='other'
		and a.attr_key='expect_to_shop_time'
		and a.transaction_id=o.transaction_id) expect_to_shop_time,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='other'
		and a.attr_key='flight_no'
		and a.transaction_id=o.transaction_id) flight_no,
		(select attr_value from t_order_extend_attr a
		where a.attr_group='other'
		and a.attr_key='train_no'
		and a.transaction_id=o.transaction_id) train_no,
	
		(select remark from t_order_remarks r where r.order_id=o.transaction_id limit 1)
		remark
		from
      	t_order o, t_order_merch m
   	<where>
   		<include refid="whereForQuerySaaSResellerOrder" /> 
   		and o.transaction_id=m.order_id
   	</where>
    </select>
	
</mapper>
